{"version":3,"file":"static/js/564.a98e01ea.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  top: 50%;\n  background-color: white;\n  border-radius: 3%;\n  width: 420px;\n`;\n\nexport const Form = styled.form`\n  border: 1px solid black;\n`;\nexport const Label = styled.label`\n  left: 20px;\n  bottom: 11px;\n  font-family: Lusitana, serif;\n  font-size: 18px;\n  line-height: 26px;\n  font-weight: 400;\n  color: #888;\n  cursor: text;\n  transition: transform 0.2s ease-in-out;\n  margin-left: 16px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n\n  height: 36px;\n  border-width: 0 0 2px 0;\n  border-color: #000;\n  font-family: Lusitana, serif;\n  font-size: 18px;\n  line-height: 26px;\n  font-weight: 400;\n  margin-left: 16px;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus,\n  &.not-empty {\n    + .label {\n      transform: translateY(-24px);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: #000;\n  color: #fff;\n  font-family: Raleway, sans-serif;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 8px 16px;\n  border: none;\n  cursor: pointer;\n  margin-left: 16px;\n`;\nexport const Title = styled.h2`\n  text-align: center;\n  font-family: Raleway, sans-serif;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  font-size: 36px;\n  line-height: 48px;\n`;\n\nexport const FormField = styled.div`\n  margin: 32px 0;\n`;\n","import { useState } from 'react';\nimport {\n  Input,\n  Form,\n  Label,\n  Button,\n  Section,\n  Title,\n  FormField,\n} from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setName('');\n    setNumber('');\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    )\n      alert(`${name} is already in contact`);\n    else {\n      return dispatch(addContact({ name, number }));\n    }\n  };\n\n  return (\n    <Section>\n      <Title>PhoneBook</Title>\n      <Form onSubmit={handleSubmit}>\n        <FormField>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n          <Label>Name</Label>\n        </FormField>\n        <FormField>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n          <Label>Number</Label>\n        </FormField>\n        <FormField>\n          <Button type=\"submit\">Add Contact</Button>\n        </FormField>\n      </Form>\n    </Section>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  background-color: #000;\n  color: #fff;\n  font-family: Raleway, sans-serif;\n  text-transform: uppercase;\n\n  letter-spacing: 2px;\n  font-size: 10px;\n  line-height: 10px;\n  padding: 8px 16px;\n  border: none;\n  cursor: pointer;\n  margin-left: 16px;\n`;\n","import { List, Item, Button } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterContacts = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filter);\n  });\n\n  return (\n    <List>\n      {filterContacts.map(({ id, number, name }) => (\n        <Item key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <Button\n            type=\"button\"\n            onClick={e => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete contact\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  display: block;\n\n  height: 36px;\n  border-width: 0 0 2px 0;\n  border-color: #000;\n  font-family: Lusitana, serif;\n  font-size: 18px;\n  line-height: 26px;\n  font-weight: 400;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus,\n  &.not-empty {\n    + .label {\n      transform: translateY(-24px);\n    }\n  }\n`;\n","import { Input, Label } from './Filter.styled';\nimport { onFilter } from 'redux/contacts/slice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      Find Contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(onFilter(e.currentTarget.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nexport const ContactsContainer = styled.div`\n  max-width: 650px;\n  padding: 16px;\n  top: 50%;\n  background-color: white;\n  border-radius: 3%;\n`;\n","import { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, ContactsContainer } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contact = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <ContactsContainer>\n        {contact.length > 0 ? (\n          <>\n            <h1>Contacts</h1>\n            <Filter />\n          </>\n        ) : (\n          <div>\n            <img\n              src=\"https://d3pbdh1dmixop.cloudfront.net/readdle/Blog/transfer-contacts-from-iphone-to-iphone/transfer%20contacts%20from%20iphone%20to%20iphone.png\"\n              alt=\"addContact\"\n              width={320}\n              height={250}\n            />\n            <h3>Add new Contact</h3>\n          </div>\n        )}\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactsList />\n      </ContactsContainer>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","Section","styled","Form","Label","Input","Button","Title","FormField","dispatch","useDispatch","useSelector","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","contact","toLowerCase","addContact","alert","type","pattern","title","onChange","required","List","Item","ContactsList","filterContacts","includes","map","id","onClick","deleteContact","Filter","onFilter","Container","ContactsContainer","Contacts","useEffect","fetchContacts","length","src","alt","width","height"],"sourceRoot":""}